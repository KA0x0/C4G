#+TITLE: Guix Minimal-Packages
#+PROPERTY: header-args:scheme :tangle my-variables.scm

(use-modules (gnu packages) (gcrypt hash) 
(use-modules (gnu packages emacs))
(define-module (my-variables))

(define my-motd
     (service login-service-type
               (login-configuration
                (motd (plain-file "motd" "\
UNAUTHORIZED ACCESS TO THIS DEVICE IS PROHIBITED.\n
You must have explicit, authorized permission to access or configure this device.\n
Unauthorized attempts and actions to access or use this system may result in civil and/or criminal penalties.\n
All activities performed on this device are logged and monitored.\n\n")))))

(define my-emacs-no-x
  (package
    (inherit emacs-no-x) 
      (snippet
        '(begin
          (with-directory-excursion "emacs/lisp"
            (for-each delete-file-recursively
              '("obsolete"
                "play")))))))

(define my-emacs
  (package
    (inherit emacs)
      (snippet
        '(begin
          (with-directory-excursion "emacs/lisp"
            (for-each delete-file-recursively
              '("obsolete"
                "play")))))))

(define-public my-packages
  (map specification->package
  '("bash"
   "bash-completion"
   "emacs-bash-completion"
   "bzip2"
   "coreutils"
   "curl"
   "diffutils"
   "my-emacs-no-x"
   "emacs-evil"
   "emacs-evil-collection"
   "emacs-geiser"
   "emacs-geiser-guile"
   "emacs-guix"
   "emacs-magit"
   "emacs-org"
   "emacs-paredit" 
   "emacs-tramp"
   "emacs-undo-tree"
   "emacs-which-key"
   "eudev"
   "findutils"
   "gawk"
   "git"
   "grep"
   "guile"
   "guile-colorized"
   "guile-readline"
   "gzip"
   "kmod"
   "less"
   "lzip"
   "man-db"
   "nss-certs"
   "patch"
   "procps"
   "psmisc"
   "sed"
   "shadow"
   "sudo"
   "tar"
   "util-linux-with-udev"
   "wget"
   "which"
   "xz")))